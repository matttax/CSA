Задание:
	Обобщённый артефакт:
		Объемная (трехмерная) геометрическая фигура.
	Базовые альтернативы:
		1. Шар (целочисленный радиус)
		2. Параллелепипед (три целочисленных ребра)
		3. Правильный тетраэдр (длина ребра – целое)
	Общая функция для всех альтернатив:
		Вычисление площади поверхности.
	Обработка данных:
		Упорядочить элементы контейнера по убыванию используя сортировку Сортировка с помощью прямого выбора (Straight Selection).

Файлы:
	main.cpp(1.51 KB):
		Содержит функцию main, через неё происходит заполнение контейнера, чтение файла и т.д. Используется для тестирования.
	container.cpp(1.56 KB) & container.h(852 B):
		Структура данных для хранения геометрических фигур.
	shape.cpp(965 B) & shape.h(1.02 KB):
		Описание обобщённой фигуры. Содержит функции чтения, поиска площади поверхности и рандомной генерации.
	sphere.cpp(684 В) & sphere.h(731 В);
	parallelepiped.cpp(913 B) & parallelepiped.h(913 B);
	reget.cpp(849 В) & regtet.h(893 В):
		Описания фигур. Описаны функции чтения, поиска площади поверхности и рандомной генерации.
	rand.h(257 В):
		Генератор случайных чисел от 1 до 20.

Команды для терминала:
	./task01 -f [inputFileName] [outputFileName] [sortedOutputFileName] - ввод фигур из файла.
	./task01 -n [number] [outputFileName] [sortedOutputFileName] - рандомная генерация n фигур.

Тесты:
	11 тестов папке tests.

Выводы:
	Некоторые файлы стали весить чуть больше из-за виртуальных функций. При этом теперь программа требует меньше памяти для своего выполнения. 
  Можно сделать вывод, что объектно-ориентированный подход эффективнее процедурного (как минимум в данном случае).
